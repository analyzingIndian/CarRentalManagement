@page "/vechiles/delete"
@using Microsoft.EntityFrameworkCore
@using CarRentalManagement.Domain
@inject IDbContextFactory<CarRentalManagement.Data.CarRentalManagementContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Vechile</h2>
    <hr />
    @if (vechile is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Year</dt>
            <dd class="col-sm-10">@vechile.Year</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LicensePlateNumber</dt>
            <dd class="col-sm-10">@vechile.LicensePlateNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MakeId</dt>
            <dd class="col-sm-10">@vechile.MakeId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ModelId</dt>
            <dd class="col-sm-10">@vechile.ModelId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ColourId</dt>
            <dd class="col-sm-10">@vechile.ColourId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@vechile.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@vechile.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@vechile.UpdatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@vechile.CreatedBy</dd>
        </dl>
        <EditForm method="post" Model="vechile" OnValidSubmit="DeleteVechile" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(vechile is null)">Delete</button> |
            <a href="/vechiles">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Vechile? vechile;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        vechile = await context.Vechile.FirstOrDefaultAsync(m => m.Id == Id);

        if (vechile is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteVechile()
    {
        using var context = DbFactory.CreateDbContext();
        context.Vechile.Remove(vechile!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/vechiles");
    }
}
